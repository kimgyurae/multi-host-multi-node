#!/bin/sh

#  nNode.sh
#  This scripts creates N nodes on a single host
#
#  Created by Gyurae Kim on 2018. 7. 9..
#  http://www.ibct.io

source="/home/eos/eos" #only for workstaions. Use different source directory for AWS EC2 instances
dir="/home/eos/eos/nNode" # this as well

# kill currently running nodeos and keosd process
# remove all folders from previous trials
killall keosd
killall nodeos
rm -rf /root/eosio-wallet #remove the existing wallet folder
rm -rf $dir/keosdlog
rm -rf $dir/nodeoslog
rm -rf $dir/walletInfo
rm -rf $dir/node*
sudo kill nodeos

cd $dir

for ((j=1; j < 4; j++)) #j iterates from 1 to 3
do

if [ $j -eq 1 ]
then
ssh root@172.16.1.14 -p 22; << EOF
#sleep 3s
mkdir /home/testfolder
exit
EOF
elif [ $j -eq 2 ]
then
ssh root@172.16.1.15 -p 1022; <<EOF
mkdir /home/testfolder
exit
EOF
else
ssh root@172.16.1.11 -p 1022; <a<EOF
mkdir /home/testfolder
exit
EOF
fi

done##########remove this!!!!
<<EOF
######################Initial Setup: NOT IN USE FOR NOW
read -p 'numNodes : ' numNodes
localhost="127.0.0.1"
http_port_start="4700"
#http_port_end=$(($http_port_start+$numNodes))
p2p_port_start="5600"
#p2p_port_end=$(($p2p_port_start+$numNodes))
wallet_port="8899"
wallet_host="127.0.0.1"
firewall-cmd --permanent --add-port=$wallet_port/tcp #this port will be used to initialize eosio node
#firewall-cmd --permanent --add-port=$http_port_start-$http_port_end/tcp
#firewall-cmd --permanent --add-port=$p2p_port_start-$p2p_port_end/tcp
firewall-cmd --reload

######################EOSIO BIOS KEOSD Setup
mkdir $dir/keosdlog
#run keosd and redirect the consol output to specified directories
keosd --http-server-address 127.0.0.1:8899 --data-dir $dir/keosdlog > $dir/keosdlog/stdout.txt 2> $dir/keosdlog/stderr.txt &  echo $! > $dir/keosdlog/keosd.pid
######################EOSIO BIOS CLEOS Setup
mkdir $dir/walletInfo
cleos --wallet-url http://127.0.0.1:8899 wallet create > $dir/walletInfo/1.txt #create wallet and redirect the output to 1.txt
sed -n -e 4p $dir/walletInfo/1.txt > $dir/walletInfo/2.txt #extract password part only from 1.txt
sed 's/^"\(.*\)".*/\1/' $dir/walletInfo/2.txt > $dir/walletInfo/walletpassword.txt # remove "" from 2.txt.
rm -rf $dir/walletInfo/1.txt $dir/walletInfo/2.txt # remove text files
cleos --wallet-url http://localhost:$wallet_port wallet open # open the wallet
cleos --wallet-url http://localhost:$wallet_port wallet unlock < $dir/walletInfo/walletpassword.txt #unlock the wallet and enter password in walletpassword.txt
######################EOSIO BIOS Node Setup
mkdir $dir/nodeoslog #directory to store the console output from running nodeos
#run bios producer
#http_port: 8899
#p2p_port: 9876
nodeos --enable-stale-production --producer-name eosio --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin --data-dir $dir/nodeoslog --config-dir $dir/nodeoslog > $dir/nodeoslog/stdout.txt 2> $dir/nodeoslog/stderr.txt &  echo $! > $dir/nodeoslog/nodeos.pid

sleep 3s #!!!!I need to pause the program for a few seconds. If not paused, the program cannot locate config.ini file generated by the above command

######################EOSIO BIOS accoount private key import
grep -o 'KEY:[^"]*' $dir/nodeoslog/config.ini > $dir/nodeoslog/keys.txt # grab signature provider saction from config.ini
sed -n -e 2p $dir/nodeoslog/keys.txt > $dir/nodeoslog/priv.txt #grab privkey part from keys.txt (KEY:xxxxxxxxxx)
prikey=$(grep ':' $dir/nodeoslog/priv.txt | sed 's/^.*://') #store only private key into $prikey
rm -rf $dir/nodeoslog/keys.txt #$dir/nodeoslog/priv.txt # remove txt files for safety
cleos --wallet-url http://127.0.0.1:8899 wallet import $prikey #import the eosio private key
unset prikey # dump the private key

cleos --wallet-url http://127.0.0.1:8899 set contract eosio $source/build/contracts/eosio.bios # initiate eosio bios contract

######################Create N nodes
########Key Control for N-th Node
peers="--p2p-peer-address 127.0.0.1:9876"
for ((i=1; i < $numNodes; i++))
do
currentPort_http=$(($http_port_start+$i))
currentPort_p2p=$(($p2p_port_start+$i))
firewall-cmd --permanent --add-port=$currentPort_http/tcp
firewall-cmd --permanent --add-port=$currentPort_p2p/tcp
firewall-cmd --reload
folder=node$i
mkdir $dir/$folder #create a folder for each node
#cd $dir/$folder #change directory into the folder
cleos --wallet-url http://127.0.0.1:8899 create key > $dir/$folder/1.txt #save the output to 1.txt
sed -n -e 1p $dir/$folder/1.txt > $dir/$folder/pri.txt #get 'private: xxxxx' part from 1.txt
sed -n -e 2p $dir/$folder/1.txt > $dir/$folder/pub.txt #get 'public: xxxxx' part from 1.txt
prikey=$(grep ':' $dir/$folder/pri.txt | sed 's/^.*: //') #store private key inside prikey
pubkey=$(grep ':' $dir/$folder/pub.txt | sed 's/^.*: //') #store private key inside pubkey
rm -rf $dir/$folder/1.txt #$dir/$folder/pub.txt $dir/$foler/pri.txt # remove key info for security
########Cleos Control for N-th Node
#accountName=srv1nodenum$i
accountName=inita
cleos --wallet-url http://127.0.0.1:8899 wallet import $prikey #$> /dev/null #import private key and suppress the console output
cleos --wallet-url http://127.0.0.1:8899 create account eosio $accountName $pubkey $pubkey #TODO: 이코드가 정확히 뭘 하는지??
########Nodeos Control for N-th Node
#create anouther producer named inita and redirect the conole output.
#http_port: 8889
#p2p_port: 9877
nodeos --producer-name $accountName --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin --http-server-address 127.0.0.1:$currentPort_http --p2p-listen-endpoint 127.0.0.1:$currentPort_p2p $peers --private-key [\"$pubkey\",\"$privkey\"] --data-dir $dir/$folder --config-dir $dir/$folder > $dir/$folder/stdout.txt 2> $dir/$folder/stderr.txt &  echo $! > $dir/$folder/nodeos.pid
peers="$peers --p2p-peer-address 127.0.0.1:$currentPort_p2p"

#cleos --wallet-url http://127.0.0.1:8899 push action eosio setprods "{ \"version\": 1, \"producers\": [{\"producer_name\": \”$accountName\”,\”block_signing_key\": \"$pubkey\"}]}" -p eosio@active


#echo 1!!!
#cleos --wallet-url http://127.0.0.1:8899 system newaccount eosio --transfer $accountName $pubkey --stake-net "1000 EOS" --stake-cpu "1000 EOS" --buy-ram-kbytes 10240

#echo 2!!!
#cleos --wallet-url http://127.0.0.1:8899 system regproducer $accountName $pubkey "$URL" -p $accountName
#echo 3!!!
#cleos --wallet-url http://127.0.0.1:8899 system delegatebw eosio $accountName "1000.0000 EOS" "1000.0000 EOS" -p $eosio

#echo 4!!!
#cleos --wallet-url http://127.0.0.1:8899 system voteproducer prods $accountName $accountName -p $accountName
done
#####unset accountName priv pubkey

#connect the nodes!!
#1. append appropriate p2paddress to each config.ini


######################nodeos parameter###################
#--http-server-address 127.0.0.1:$currentPort_http
#--p2p-listen-endpoint 127.0.0.1:$currentPort_p2p
#--p2p-peer-address 127.0.0.1:9876
exit
done
EOF
exit
